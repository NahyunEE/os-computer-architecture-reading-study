장치 컨트롤러
- 입출력장치는 장치컨트롤러(Device Controller)라는 하드웨어가 존재해야한다. 

- 입출력 제어기, 입출력 모듈이라고도 한다.

 

장치 컨트롤러 역할 
- CPU와 디바이스간 통신 중개, 오류검출, 데이터 버퍼링과 같은 역할을 진행한다.

- 데이터 버퍼링이란, 전송률이 다른 디바이스 간의 전송률을 맞추기 위해 메모리(Buffer)에 적재하는 것을 의미한다.

 

장치 컨트롤러의 구성 요소 
1) 데이터 레지스터

-CPU와 입출력장치간의 주고받는 데이터를 담는 레지스터

 

2) 상태 레지스터

-입출력장치가 입출력 역할을 할 수 있는지 상태를 담아두는 레지스터

 

3) 제어 레지스터 

-입출력장치가 수행할 제어 정보와 명령어를 저장하는 레지스터

 

 

장치 드라이버
-장치 컨트롤러의 동작을 감지하고 제어함으로써 장치 컨트롤러가 컴퓨터 내부와 정보를 주고받을 수 있게 하는 프로그램

 

-장치 컨트롤러가  입출력장치를 연결하기 위한 하드웨어적인 통로라면,  장치 드라이버는 입출력장치를 연결하기 위한 소프트웨어적인 통로

 

장치 드라이버를 인식하는 것은 보통은 운영체제(OS)이다. 따로 제작되어 있는 드라이버를 파는 제작자도 있다.
 

 

 

장치 컨트롤러와 CPU간의 통신방식
 

3가지 방법이 나온다. 프로그램 입출력, 인터럽트, DMA

중요한 것은 3가지는 별개의 방법이 아니라 입출력과 통신할 때 동시에 진행이 된다.

 

 

1) 프로그램 입출력


   메모리 맵 입출력(Memory-Mapped I/O)  : MMIO
- 입출력 장치와 메모리가 같은 자원을 공유하는 방식. 

- 같은 메모리(RAM)에 입출력장치에 접근할 주소와 상태를 저장하는 방식이다.

- 연결되는 입출력 장치가 늘어나면 메모리가 쓸 수 있는 가용영역이 줄어든다.

- CPU 입장에서 메모리와 I/O장치를 동일한 것으로 간주하게 된다.

- 명령어가 간단한 MIPS구조나, ARM 구조에서 보이는 특징이다.

 

명령어: LDR, STR

 

고립형 입출력(Isolated I/O)
- 입출력 장치와 메모리가 별개의 주소 영역에서 존재한다.

- 입출력장치가 늘어난다고 해도 메모리의 영역이 둘어들지 않는다.

- CPU입장에서는 메모리와 다른 입출력이므로 다른 명령어로 입출력 장치에 접근해야한다. 

- 주로 Intel 계열의 X86 프로세서에서 쓰이는 방식이다. 

 

명령어: 메모리에 접근시 : LDR STR

             입출력 장치에 접근시: IN OUT

 

 

2) 인터럽트 기반 입출력

 

- 실제로 장치가 어떤 역할을 수행하고 나서 수행이 끝났다라는 메세지를 보낼때 인터럽트를 기반으로 보낸다.

- 인터럽트: 방해하다!


 

- CPU에 인터럽트 시그널을 보내는 주체는 I/O장치의 장치컨트롤러이다.

- CPU는 인터럽트 시그널을 받으면 ISR(Interrupt Sub-Routine)을 수행한다.

- 이 때 인터럽트 시그널을 받으면 상태레지스터의 I 플래그가 활성화가 된다.



 

 

- CPU에 보내는 인터럽트의 우선순위를 매기고 인터럽트를 관리하는 하드웨어가 따로 존재하는데 PIC이다.

(PIC: Programmable Interrupt Controller)  

- 인터럽트 핸들러: 인터럽트 신호가 발생할때 CPU에서 진행하는 인터럽트 처리 함수

 

 

3) DMA (Direct Memory Access)

 

- 입출력 장치와 메모리가 CPU를 거치지 않고도 상호작용 할 수 있는 방식이다.

- 위 인터럽트 방식은 PIC가 존재한다 해도 인터럽트 벡터를 메모리에서 가져오고 또 그 명령을 PIC에 보내야 하기 때문에 CPU 부하가 존재한다. 이를 개선한 것이 DMA이다.


- DMA방식을 쓰기 위해서는 DMA Controller라는 하드웨어 장치가 필요하다.

- DMA는 아래와 같이 이뤄진다.

1.CPU는 DMA 컨트롤러에 입출력장치의 주소, 수행할 연산, 읽거나 쓸 메모리 주소등과 같은 정보로 입출력 작업을 명령한다..
2.DMA컨트롤러는 CPU대신 장치 컨트롤러와 상호작용하면서 입출력작업을 수행한다. 이때 DMA컨트롤러는 필요한 경우 메모리에 직접 접근해서 정보를 읽거나 쓴다.
3.입출력 작업이 끝나면 DMA컨트롤러는 CPU에 인터럽트를 걸어 작업이 끝났음을 알린다.
 

- 위와 같은 단계 때문에 시스템버스를 CPU와 DMA Controller가 공유하게 된다. 이를 CPU입장에서 버스를 뺏긴다라고 생각해서 Cycle Stealing이라고 한다.

 

PCI
- DMA가 CPU와 같이 시스템 버스를 공유하면 DMA의 작업이 수행하기 어렵다.

- 그런 이유에서 DMA와 CPU의 버스를 별도로 만든다. 이를 입출력버스(IN/OUT Bus)라고 한다.


 

- 입출력 버스에는 PCI, PCIe 등이 존재한다.



출처 : https://nahyunblog.tistory.com/entry/CS%EC%8A%A4%ED%84%B0%EB%94%948-%EC%9E%85%EC%B6%9C%EB%A0%A5%EC%9E%A5%EC%B9%98



 
